自定义类型：结构体，枚举，联合

一、结构体
1.声明：一般在main函数之前声明
匿名声明。
2.初始化：用{}对结构体成员列表进行初始化。
3.结构体对齐：
（1）第一个成员放在起始位置的零偏移处，
（2）第二个成员开始要放在某个对齐数（第二个成员自身大小和默认对齐数的较小值，vs中默认对齐数是8）的整数倍处。
（3）总大小为最大对齐数的整数倍。
（4）如果嵌套了结构体，嵌套的结构体对齐到自己的最大对齐数的整数倍处。结构体的大小就是所有最大对齐数的整数倍。

4.修改默认对齐数：
#pragma pack(4)//把默认对齐数改为括号里的数字

#pragma pack()//改为默认对齐数

括号里的数字应该是2^n次方。

二、位段
位段的声明与结构体类似，有两个不同：
(1).位段的成员必须是int、unsigned int或signed int。也可以是char。
(2).位段的成员后边有一个冒号和数字。

冒号后的数字是比特位的位数。

位段的内存分配：
1.位段的成员是int、unsigned int或signed int。也可以是char。
2.位段的空间是按照需要以4个字节（int）或者1个字节(char)的方式来开辟的。
3.

三、枚举
1.enum tag{ , , };//;不能省略
2.

四、联合（共用体）
union tag {成员1,成员2,成员。。};

成员公用同一块空间。

大小最小是成员里最大所占空间的大小，最大是成员里最大对齐数的整数倍的大小。